import { type NextPage } from "next";
import Head from "next/head";
import { useUser, SignInButton, UserButton, SignedOut } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";
dayjs.extend(relativeTime);

const CreateWizzardPost = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        width={56}
        height={56}
        src={user.profileImageUrl}
        alt="Profile Image"
        className="first-letter: h-14 w-14 rounded-full"
      />
      {/* <div className="flex h-14 w-14 items-center justify-center">
        <UserButton />
      </div> */}
      <input
        type="text"
        placeholder="type something..."
        className="grow bg-transparent outline-none"
        name=""
        id=""
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className=" flex gap-3 border-b border-slate-400 p-4">
      <Image
        width={56}
        height={56}
        src={author.profileImg}
        alt={`@${author.username || author.lastName}'s profile picture`}
        className="first-letter h-14 w-14 rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex font-semibold text-slate-300">
          <span>
            {`@${
              author.username
                ? author.username
                : `${author.firstName}-${author.lastName}`
            }`}
          </span>
          <span>{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postLoading } = api.posts.getAll.useQuery();
  if (postLoading) return <LoadingPage />;
  if (!data) return <div>Something went wrong! </div>;

  return (
    <div className="">
      {[...data, ...data]?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { user, isLoaded: userLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && <SignInButton />}
            {isSignedIn && <CreateWizzardPost />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
